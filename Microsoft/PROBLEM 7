   void dfs(int i, int j, int r, int c, vector<vector<int>>& grid,int &cnt){
        if(i < 0 || j < 0 || i >= r || j >= c || grid[i][j] != 1)
            return;
        
        grid[i][j] = -1;
        cnt++;
        
        dfs(i-1,j,r,c,grid,cnt);
        dfs(i+1,j,r,c,grid,cnt);
        dfs(i,j-1,r,c,grid,cnt);
        dfs(i,j+1,r,c,grid,cnt);
        dfs(i-1,j-1,r,c,grid,cnt);
        dfs(i-1,j+1,r,c,grid,cnt);
        dfs(i+1,j-1,r,c,grid,cnt);
        dfs(i+1,j+1,r,c,grid,cnt);
    }
    
    
    int findMaxArea(vector<vector<int>>& grid) {
         int n = grid.size();
        int m = grid[0].size();
        
        int mx = -1;
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j] == 1){
                    int cnt = 0;
                    dfs(i,j,n,m,grid,cnt);
                    mx = max(mx,cnt);
                }
            }
        }
        return (mx == -1)?0:mx;
    }
