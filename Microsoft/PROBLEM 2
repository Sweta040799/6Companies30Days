bool isPossible(int N, vector<pair<int, int> >& prerequisites) {
	    vector<int> indegree(N,0);
	    vector<int> adj[N];
	    for(auto& it : prerequisites){
	        adj[it.second].push_back(it.first);
	        indegree[it.first]++;
	    }
	    queue<int> q;
	    vector<int> ans;
	    for(int i=0;i<N;i++){
	        if(indegree[i] == 0)
	          q.push(i);
	    }
	    
	    while(!q.empty()){
	        int temp = q.front();
	        ans.push_back(temp);
	        q.pop();
	        
	        for(auto& it : adj[temp]){
	            indegree[it]--;
	            if(indegree[it] < 1)
	              q.push(it);
	        }
	    }
	    if(ans.size() < N)
	       return false;
	       
	  return true;
	    
	}
